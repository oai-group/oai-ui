version: '3.9'
services: 
  mysql:
    container_name: oai-mysql
    image: oai-mysql-image:latest
    build: ./sql
    ports:
      - "3306:3306"
    restart: always

  springboot:
    container_name: springboot-container
    image: springboot-redis:latest
    # 通过dockerfile来构建镜像
    build: ./app
    environment:
      TZ: Asia/Shanghai
    # 挂载springboot的日志
    volumes:
      - ./app/logs:/home/zcq/docker-compose/logs
    # springboot服务依赖于mysql服务,这里会把springboot和mysql加载到一个docker网络中,这样就能通过container_name来访问不同的容器
    depends_on:
      - oai-mysql
    entrypoint: ["./wait-for-it.sh", "oai-mysql:3306", "--", "java", "-jar", "./docker-compose-app.jar"]
    restart: always

  grafana: 
    container_name: oai-ui
    image: grafana/grafana:8.1.4
    ports:
      - '3000:3000'
    environment:
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_USERS_ALLOW_ORG_CREATE=false
      - GF_USERS_AUTO_ASSIGN_ORG_ROLE=Read Only Editor 
      # 初始化grafana的时候加载grafana插件
      - GF_INSTALL_PLUGINS=agenty-flowcharting-panel
    volumes:
      # 挂载grafana的配置文件
      - ./grafana/grafana:/etc/grafana
      # 挂载grafana的日志
      - ./grafana/logs:/var/log/grafana
      # 挂载grafana的dashboards的JSON文件
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - ./grafana/wait-for-it.sh:/home/wait-for-it.sh
    depends_on:
      - oai-mysql
    entrypoint: ["/home/wait-for-it.sh", "oai-mysql:3306", "--", "/run.sh"]
    restart: always